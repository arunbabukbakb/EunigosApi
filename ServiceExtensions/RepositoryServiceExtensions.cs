using EunigosApi.Repositories.Activities;
using EunigosApi.Repositories.AllocationManagement.AllocationEmployees;
using EunigosApi.Repositories.AllocationManagement.AllocationEmployeeTimeLogTimeLogs;
using EunigosApi.Repositories.AllocationManagement.AllocationStatusHistories;
using EunigosApi.Repositories.AllocationManagements.AllocationEmployees;
using EunigosApi.Repositories.AllocationManagements.AllocationEmployeeTimeLogTimeLogs;
using EunigosApi.Repositories.AllocationManagements.AllocationStatusHistories;
using EunigosApi.Repositories.Appointments;
using EunigosApi.Repositories.AppPreferences;
using EunigosApi.Repositories.Auth;
using EunigosApi.Repositories.BankAccounts;
using EunigosApi.Repositories.Banks;
using EunigosApi.Repositories.BlockedSlots;
using EunigosApi.Repositories.CapacityForecasts;
using EunigosApi.Repositories.Cities;
using EunigosApi.Repositories.ConsumableItems;
using EunigosApi.Repositories.CorporateCustomers;
using EunigosApi.Repositories.Countries;
using EunigosApi.Repositories.Coupons;
using EunigosApi.Repositories.Currencies;
using EunigosApi.Repositories.CustomerAddresses;
using EunigosApi.Repositories.CustomerCategories;
using EunigosApi.Repositories.CustomerCommunicationPreferences;
using EunigosApi.Repositories.CustomerContactPersonAddresses;
using EunigosApi.Repositories.CustomerContactPersonContacts;
using EunigosApi.Repositories.CustomerContactPersons;
using EunigosApi.Repositories.CustomerContacts;
using EunigosApi.Repositories.CustomerCoupons;
using EunigosApi.Repositories.CustomerDiscounts;
using EunigosApi.Repositories.CustomerFinancials;
using EunigosApi.Repositories.CustomerIdentities;
using EunigosApi.Repositories.CustomerProfiles;
using EunigosApi.Repositories.Customers;
using EunigosApi.Repositories.CustomerServiceProfiles;
using EunigosApi.Repositories.CustomerVehicles;
using EunigosApi.Repositories.CustomManagement.CustomFields;
using EunigosApi.Repositories.CustomManagement.CustomFieldValues;
using EunigosApi.Repositories.CutomerContactPersonContacts;
using EunigosApi.Repositories.DepartmentAvailabilities;
using EunigosApi.Repositories.Departments;
using EunigosApi.Repositories.Designations;
using EunigosApi.Repositories.Discounts;
using EunigosApi.Repositories.Documents;
using EunigosApi.Repositories.EmployeeAdditionalInfos;
using EunigosApi.Repositories.EmployeeAddresses;
using EunigosApi.Repositories.EmployeeAvailabilities;
using EunigosApi.Repositories.EmployeeContacts;
using EunigosApi.Repositories.EmployeeIdentities;
using EunigosApi.Repositories.EmployeePersonals;
using EunigosApi.Repositories.Employees;
using EunigosApi.Repositories.EmployeeSchedules;
using EunigosApi.Repositories.EmployeeUnavailabilityReasons;
using EunigosApi.Repositories.EmploymentDetails;
using EunigosApi.Repositories.Equipments;
using EunigosApi.Repositories.EstimateApprovals;
using EunigosApi.Repositories.EstimateDocuments;
using EunigosApi.Repositories.EstimateItems;
using EunigosApi.Repositories.Estimates;
using EunigosApi.Repositories.FuelTypes;
using EunigosApi.Repositories.Identities;
using EunigosApi.Repositories.IdentityTypes;
using EunigosApi.Repositories.Images;
using EunigosApi.Repositories.IndividualCustomers;
using EunigosApi.Repositories.InsuranceCustomers;
using EunigosApi.Repositories.InsuranceDetails;
using EunigosApi.Repositories.InventoryItems;
using EunigosApi.Repositories.InvoiceManagement.Invoices;
using EunigosApi.Repositories.ItemMaster;
using EunigosApi.Repositories.JobCardItemManagement.JobCardItemItems;
using EunigosApi.Repositories.JobCardManagement.JobAllocations;
using EunigosApi.Repositories.JobCardManagement.JobCards;
using EunigosApi.Repositories.JobCardManagement.JobTypes;
using EunigosApi.Repositories.JobTypeManagement.JobTypes;
using EunigosApi.Repositories.Languages;
using EunigosApi.Repositories.LocalizedTemplates;
using EunigosApi.Repositories.Locations;
using EunigosApi.Repositories.Manufactures;
using EunigosApi.Repositories.MilestoneManagement.MilestoneStatusHistories;
using EunigosApi.Repositories.MilestoneManagement.MilestoneTrackers;
using EunigosApi.Repositories.NotificationDeliveries;
using EunigosApi.Repositories.NotificationManagement.NotificationRules;
using EunigosApi.Repositories.NotificationManagement.Notifications;
using EunigosApi.Repositories.NotificationManagement.NotificationTemplates;
using EunigosApi.Repositories.NotificationPreferences;
using EunigosApi.Repositories.NotificationRecipients;
using EunigosApi.Repositories.OfficeBranchAddresses;
using EunigosApi.Repositories.OfficeBranches;
using EunigosApi.Repositories.OrganizationUnits;
using EunigosApi.Repositories.OutsideWorkItems;
using EunigosApi.Repositories.PartManagement.ItemService;
using EunigosApi.Repositories.PartManagement.Parts;
using EunigosApi.Repositories.PartManagement.PartSuppliers;
using EunigosApi.Repositories.PartManagement.SourceOfPart;
using EunigosApi.Repositories.PartManagement.TypesOfPart;
using EunigosApi.Repositories.PartPrices;
using EunigosApi.Repositories.PurchaseManagement.PurchaseOrderItems;
using EunigosApi.Repositories.PurchaseManagement.PurchaseOrderReceiptItems;
using EunigosApi.Repositories.PurchaseManagement.PurchaseOrders;
using EunigosApi.Repositories.PurchaseOrderReceipts;
using EunigosApi.Repositories.QCManagement.QCCheckItems;
using EunigosApi.Repositories.QCManagement.QCDefectHistories;
using EunigosApi.Repositories.QCManagement.QCDefects;
using EunigosApi.Repositories.QCManagement.QCInspections;
using EunigosApi.Repositories.QCManagement.QCModules;
using EunigosApi.Repositories.QCManagement.QCResults;
using EunigosApi.Repositories.QCManagement.QCReworks;
using EunigosApi.Repositories.QCManagement.QCTemplates;
using EunigosApi.Repositories.RepairKitManagement.RepairKitItems;
using EunigosApi.Repositories.RepairKitManagement.RepairKitParts;
using EunigosApi.Repositories.RepairKitManagement.RepairKits;
using EunigosApi.Repositories.RepairKitManagement.RrepairKitServices;
using EunigosApi.Repositories.RepairTypes;
using EunigosApi.Repositories.ResourceManagement.ResourceAllocations;
using EunigosApi.Repositories.ResourceManagement.ResourceCertifications;
using EunigosApi.Repositories.ResourceManagement.ResourceLocations;
using EunigosApi.Repositories.ResourceManagement.ResourceMetrics;
using EunigosApi.Repositories.ResourceManagement.ResourceReservations;
using EunigosApi.Repositories.Resources;
using EunigosApi.Repositories.ReworkAuthorizations;
using EunigosApi.Repositories.RolePermissions;
using EunigosApi.Repositories.Roles;
using EunigosApi.Repositories.Salaries;
using EunigosApi.Repositories.SalaryTypes;
using EunigosApi.Repositories.ScheduleManagement.SchedulingConflicts;
using EunigosApi.Repositories.ScheduleManagement.SchedulingPreferences;
using EunigosApi.Repositories.ScheduleSlots;
using EunigosApi.Repositories.SchedulingRules;
using EunigosApi.Repositories.ServiceBays;
using EunigosApi.Repositories.ServiceFeedbacks;
using EunigosApi.Repositories.Serviceitems;
using EunigosApi.Repositories.ServicePackageItems;
using EunigosApi.Repositories.ServicePackages;
using EunigosApi.Repositories.ServiceReminders;
using EunigosApi.Repositories.SlotAssignments;
using EunigosApi.Repositories.SlotStatusHistories;
using EunigosApi.Repositories.SocialMediaAccounts;
using EunigosApi.Repositories.SocialMediaProviders;
using EunigosApi.Repositories.StandardRepairTimes;
using EunigosApi.Repositories.States;
using EunigosApi.Repositories.StockManagement.StockAllocations;
using EunigosApi.Repositories.StockManagement.StockItems;
using EunigosApi.Repositories.StockManagement.StockTransactions;
using EunigosApi.Repositories.Suppliers;
using EunigosApi.Repositories.TaskEmployees;
using EunigosApi.Repositories.Tasks;
using EunigosApi.Repositories.Taxes;
using EunigosApi.Repositories.TenantIdentities;
using EunigosApi.Repositories.Tenants;
using EunigosApi.Repositories.Tickets;
using EunigosApi.Repositories.Tools;
using EunigosApi.Repositories.Units;
using EunigosApi.Repositories.UserAddresses;
using EunigosApi.Repositories.UserContacts;
using EunigosApi.Repositories.UserPreferences;
using EunigosApi.Repositories.UserProfile;
using EunigosApi.Repositories.UserProfileCategories;
using EunigosApi.Repositories.UserRoles;
using EunigosApi.Repositories.Users;
using EunigosApi.Repositories.VehicleBodyStyles;
using EunigosApi.Repositories.VehicleDefectComments;
using EunigosApi.Repositories.VehicleDefects;
using EunigosApi.Repositories.VehicleDocuments;
using EunigosApi.Repositories.VehicleIdentities;
using EunigosApi.Repositories.VehicleInspectionItems;
using EunigosApi.Repositories.VehicleInspections;
using EunigosApi.Repositories.VehicleInventories;
using EunigosApi.Repositories.VehicleInventoryItems;
using EunigosApi.Repositories.VehicleManufacturers;
using EunigosApi.Repositories.VehicleModels;
using EunigosApi.Repositories.Vehicles;
using EunigosApi.Repositories.VehicleServiceHistories;
using EunigosApi.Repositories.VehicleTypes;
using EunigosApi.Repositories.Videos;
using EunigosApi.Repositories.WorkflowStatuses;
using EunigosApi.Repositories.WorkingDays;
using EunigosApi.Repositories.WorkingShifts;

namespace EunigosApi.ServiceExtensions
{
    public static class RepositoryServiceExtensions
    {
        public static IServiceCollection AddAllRepositories(this IServiceCollection Services)
        {
            //Repository registration 
            Services.AddScoped<IAuthRepository, AuthRepository>();
            Services.AddScoped<ITenantRepository, TenantRepository>();
            Services.AddScoped<ICurrencyRepository, CurrencyRepository>();
            Services.AddScoped<IUserProfileCategoryRepository, UserProfileCategoryRepository>();
            Services.AddScoped<ICountryRepository, CountryRepository>();
            Services.AddScoped<IUserProfileRepository, UserProfileRepository>();
            Services.AddScoped<ICustomerRepository, CustomerRepository>();
            Services.AddScoped<ICorporateCustomerRepository, CorporateCustomerRepository>();
            Services.AddScoped<IInsuranceCustomerRepository, InsuranceCustomerRepository>();
            Services.AddScoped<IIndividualCustomerRepository, IndividualCustomerRepository>();
            Services.AddScoped<IStateRepository, StateRepository>();
            Services.AddScoped<ICustomerContactPersonRepository, CustomerContactPersonRepository>();
            Services.AddScoped<ICustomerCategoryRepository, CustomerCategoryRepository>();
            Services.AddScoped<IIdentityTypeRepository, IdentityTypeRepository>();
            Services.AddScoped<IDocumentRepository, DocumentRepository>();
            Services.AddScoped<ICustomerFinancialRepository, CustomerFinancialRepository>();
            Services.AddScoped<ICityRepository, CityRepository>();
            Services.AddScoped<IVehicleRepository, VehicleRepository>();
            Services.AddScoped<ILocationRepository, LocationRepository>();
            Services.AddScoped<ICustomerIdentityRepository, CustomerIdentityRepository>();
            Services.AddScoped<ICustomerContactRepository, CustomerContactRepository>();
            Services.AddScoped<ICustomerAddressRepository, CustomerAddressRepository>();
            Services.AddScoped<ICustomerVehicleRepository, CustomerVehicleRepository>();
            Services.AddScoped<IVehicleInventoryRepository, VehicleInventoryRepository>();
            Services.AddScoped<IVehicleInventoryItemRepository, VehicleInventoryItemRepository>();
            Services.AddScoped<IVehicleInspectionRepository, VehicleInspectionRepository>();
            Services.AddScoped<IVehicleInspectionItemRepository, VehicleInspectionItemRepository>();
            Services.AddScoped<IImageRepository, ImageRepository>();
            Services.AddScoped<IVideoRepository, VideoRepository>();
            Services.AddScoped<IVehicleIdentityRepository, VehicleIdentityRepository>();
            Services.AddScoped<IVehicleDocumentRepository, VehicleDocumentRepository>();
            Services.AddScoped<IVehicleServiceHistoryRepository, VehicleServiceHistoryRepository>();
            Services.AddScoped<IVehicleDefectRepository, VehicleDefectRepository>();
            Services.AddScoped<IVehicleDefectCommentRepository, VehicleDefectCommentRepository>();
            Services.AddScoped<IOfficeBranchRepository, OfficeBranchRepository>();
            Services.AddScoped<IVehicleBodyStyleRepository, VehicleBodyStyleRepository>();
            Services.AddScoped<IVehicleManufacturerRepository, VehicleManufacturerRepository>();
            Services.AddScoped<IOfficeBranchAddressRepository, OfficeBranchAddressRepository>();
            Services.AddScoped<IDepartmentRepository, DepartmentRepository>();
            Services.AddScoped<IOrganizationUnitRepository, OrganizationUnitRepository>();
            Services.AddScoped<IVehicleModelRepository, VehicleModelRepository>();
            Services.AddScoped<IVehicleTypeRepository, VehicleTypeRepository>();
            Services.AddScoped<IDesignationRepository, DesignationRepository>();
            Services.AddScoped<ITicketRepository, TicketRepository>();
            Services.AddScoped<IIdentityRepository, IdentityRepository>();
            Services.AddScoped<IJobTypeRepository, JobTypeRepository>();
            Services.AddScoped<IEmployeeRepository, EmployeeRepository>();
            Services.AddScoped<IInventoryItemRepository, InventoryItemRepository>();
            Services.AddScoped<IConsumableItemRepository, ConsumableItemRepository>();
            Services.AddScoped<IServiceItemRepository, ServiceItemRepository>();
            Services.AddScoped<IOutsideWorkItemRepository, OutsideWorkItemRepository>();
            Services.AddScoped<IEstimateItemRepository, EstimateItemRepository>();
            Services.AddScoped<IDiscountRepository, DiscountRepository>();
            Services.AddScoped<ITaxRepository, TaxRepository>();
            Services.AddScoped<IRepairKitRepository, RepairKitRepository>();
            Services.AddScoped<IRepairKitItemRepository, RepairKitItemRepository>();
            Services.AddScoped<IEstimateDocumentRepository, EstimateDocumentRepository>();
            Services.AddScoped<IInsuranceDetailsRepository, InsuranceDetailRepository>();
            Services.AddScoped<IEstimateApprovalRepository, EstimateApprovalRepository>();
            Services.AddScoped<IEstimateRepository, EstimateRepository>();
            Services.AddScoped<IRepairKitPartRepository, RepairKitPartRepository>();
            Services.AddScoped<IRepairKitServiceRepository, RepairKitServiceRepository>();
            Services.AddScoped<ISalaryRepository, SalaryRepository>();
            Services.AddScoped<ISalaryTypeRepository, SalaryTypeRepository>();
            Services.AddScoped<IJobCardRepository, JobCardRepository>();
            Services.AddScoped<IJobCardItemRepository, JobCardItemRepository>();
            Services.AddScoped<IJobAllocationRepository, JobAllocationRepository>();
            Services.AddScoped<IEmployeeContactRepository, EmployeeContactRepository>();
            Services.AddScoped<IEmployeeAddressRepository, EmployeeAddressRepository>();
            Services.AddScoped<IEmployeeIdentityRepository, EmployeeIdentityRepository>();
            Services.AddScoped<IEmployeePersonalRepository, EmployeePersonalRepository>();
            Services.AddScoped<IEmployeeAdditionalInfoRepository, EmployeeAdditionalInfoRepository>();
            Services.AddScoped<IEmploymentDetailRepository, EmploymentDetailRepository>();
            Services.AddScoped<IUserRepository, UserRepository>();
            Services.AddScoped<ILanguageRepository, LanguageRepository>();
            Services.AddScoped<ICorporateCustomerRepository, CorporateCustomerRepository>();
            Services.AddScoped<IUserPreferenceRepository, UserPreferenceRepository>();
            Services.AddScoped<ICouponRepository, CouponRepository>();
            Services.AddScoped<ICustomerCouponRepository, CustomerCouponRepository>();
            Services.AddScoped<ICustomerDiscountRepository, CustomerDiscountRepository>();
            Services.AddScoped<IUserAddressRepository, UserAddressRepository>();
            Services.AddScoped<ICustomerServiceProfileRepository, CustomerServiceProfileRepository>();
            Services.AddScoped<ICustomerCommunicationPreferenceRepository, CustomerCommunicationPreferenceRepository>();
            Services.AddScoped<IBankAccountRepository, BankAccountRepository>();
            Services.AddScoped<IBankRepository, BankRepository>();
            Services.AddScoped<IUserContactRepository, UserContactRepository>();
            Services.AddScoped<ISocialMediaAccountRespository, SocialMediaAccountRepository>();
            Services.AddScoped<IEmployeeScheduleRepository, EmployeeScheduleRepository>();
            Services.AddScoped<IInsuranceCustomerRepository, InsuranceCustomerRepository>();
            Services.AddScoped<IStandardRepairTimeRepository, StandardRepairTimeRepository>();
            Services.AddScoped<IWorkingDayRepository, WorkingDayRepository>();
            Services.AddScoped<IWorkingShiftRepository, WorkingShiftRepository>();
            Services.AddScoped<IEmployeeAvailabilityRepository, EmployeeAvailabilityRepository>();
            Services.AddScoped<IEmployeeUnavailabilityReasonRepository, EmployeeUnavailabilityReasonRepository>();
            Services.AddScoped<ISocialMediaProviderRespository, SocialMediaProviderRepository>();
            Services.AddScoped<ITaskRepository, TaskRepository>();
            Services.AddScoped<ITaskEmployeeRepository, TaskEmployeeRepository>();
            Services.AddScoped<IBlockedSlotRepository, BlockedSlotRepository>();
            Services.AddScoped<ISchedulingRuleRepository, SchedulingRuleRepository>();
            Services.AddScoped<IScheduleSlotRepository, ScheduleSlotRepository>();
            Services.AddScoped<IAllocationEmployeeRespository, AllocationEmployeeRepository>();
            Services.AddScoped<IAllocationEmployeeTimeLogRespository, AllocationEmployeeTimeLogRepository>();
            Services.AddScoped<IAllocationStatusHistoryRespository, AllocationStatusHistoryRepository>();
            Services.AddScoped<ISlotStatusHistoryRepository, SlotStatusHistoryRepository>();
            Services.AddScoped<ISlotAssignmentRepository, SlotAssignmentRepository>();
            Services.AddScoped<IDepartmentAvailabilityRepository, DepartmentAvailabilityRepository>();
            Services.AddScoped<ICapacityForecastRepository, CapacityForecastRepository>();
            Services.AddScoped<IResourceRepository, ResourceRepository>();
            Services.AddScoped<IToolRepository, ToolRepository>();
            Services.AddScoped<IServiceBayRepository, ServiceBayRepository>();
            Services.AddScoped<IEquipmentRepository, EquipmentRepository>();
            Services.AddScoped<ISchedulingConflictRepository, SchedulingConflictRepository>();
            Services.AddScoped<ISchedulingPreferenceRepository, SchedulingPreferenceRepository>();
            Services.AddScoped<IWorkflowStatusRepository, WorkflowStatusRepository>();
            Services.AddScoped<IAppointmentRepository, AppointmentRepository>();
            Services.AddScoped<IServicePackageItemRepository, ServicePackageItemRepository>();
            Services.AddScoped<IServicePackageRepository, ServicePackageRepository>();
            Services.AddScoped<IQCCheckItemRepository, QCCheckItemRepository>();
            Services.AddScoped<IQCInspectionRepository, QCInspectionRepository>();
            Services.AddScoped<IQCModuleRepository, QCModuleRepository>();
            Services.AddScoped<IQCDefectRepository, QCDefectRepository>();
            Services.AddScoped<IQCDefectHistoryRepository, QCDefectHistoryRepository>();
            Services.AddScoped<IQCResultRepository, QCResultRepository>();
            Services.AddScoped<IQCReworkRepository, QCReworkRepository>();
            Services.AddScoped<IQCTemplateRepository, QCTemplateRepository>();
            Services.AddScoped<IServiceFeedbackRepository, ServiceFeedbackRepository>();
            Services.AddScoped<IServiceReminderRepository, ServiceReminderRepository>();
            Services.AddScoped<ICustomerContactPersonAddressRepository, CustomerContactPersonAddressRepository>();
            Services.AddScoped<ICustomerContactPersonContactRepository, CustomerContactPersonContactRepository>();
            Services.AddScoped<IMilestoneStatusHistoryRepository, MilestoneStatusHistoryRepository>();
            Services.AddScoped<IMilestoneTrackerRepository, MilestoneTrackerRepository>();
            Services.AddScoped<INotificationDeliveryRepository, NotificationDeliveryRepository>();
            Services.AddScoped<INotificationPreferenceRepository, NotificationPreferenceRepository>();
            Services.AddScoped<INotificationRecipientRepository, NotificationRecipientRepository>();
            Services.AddScoped<INotificationRepository, NotificationRepository>();
            Services.AddScoped<INotificationRuleRepository, NotificationRuleRepository>();
            Services.AddScoped<INotificationTemplateRepository, NotificationTemplateRepository>();
            Services.AddScoped<ILocalizedTemplateRepository, LocalizedTemplateRepository>();
            Services.AddScoped<IReworkAuthorizationRepository, ReworkAuthorizationRepository>();
            Services.AddScoped<ITenantIdentityRepository, TenantIdentityRepository>();
            Services.AddScoped<IPartPriceRepository, PartPriceRepository>();
            Services.AddScoped<IUnitRepository, UnitRepository>();
            Services.AddScoped<IManufacturerRepository, ManufacturerRepository>();
            Services.AddScoped<ICustomerProfileRepository, CustomerProfileRepository>();
            Services.AddScoped<ISupplierRepository, SupplierRepository>();
            Services.AddScoped<IAppPreferenceRepository, AppPreferenceRepository>();
            Services.AddScoped<IInvoiceRepository, InvoiceRepository>();
            Services.AddScoped<IActivityRepository, ActivityRepository>();
            Services.AddScoped<IPurchaseOrderRepository, PurchaseOrderRepository>();
            Services.AddScoped<IStockAllocationRepository, StockAllocationRepository>();
            Services.AddScoped<IStockItemRepository, StockItemRepository>();
            Services.AddScoped<IPurchaseOrderReceiptRepository, PurchaseOrderReceiptRepository>();
            Services.AddScoped<IStockTransactionRepository, StockTransactionRepository>();
            Services.AddScoped<ICustomFieldRepository, CustomFieldRepository>();
            Services.AddScoped<ICustomFieldValueRepository, CustomFieldValueRepository>();
            Services.AddScoped<IPartRepository, PartRepository>();
            Services.AddScoped<IPartSupplierRepository, PartSupplierRepository>();
            Services.AddScoped<IResourceAllocationRepository, ResourceAllocationRepository>();
            Services.AddScoped<IResourceCertificationRepository, ResourceCertificationRepository>();
            Services.AddScoped<IResourceLocationRepository, ResourceLocationRepository>();
            Services.AddScoped<IResourceMetricRepository, ResourceMetricRepository>();
            Services.AddScoped<IResourceReservationRepository, ResourceReservationRepository>();
            Services.AddScoped<IRoleRepository, RoleRepository>();
            Services.AddScoped<IRolePermissionRepository, RolePermissionRepository>();
            Services.AddScoped<IPurchaseOrderItemRepository, PurchaseOrderItemRepository>();
            Services.AddScoped<IPurchaseOrderReceiptItemRepository, PurchaseOrderReceiptItemRepository>();
            Services.AddScoped<IFuelTypeRepository, FuelTypeRepository>();
            Services.AddScoped<IRepairTypeRepository, RepairTypeRepository>();
            Services.AddScoped<ITypesOfPartsRepository, TypesOfPartsRepository>();
            Services.AddScoped<ISourceOfPartsRepository, SourceOfPartsRepository>();
            Services.AddScoped<IItemServicesRepository, ItemServicesRepository>();
            Services.AddScoped<IItemMasterRepository, ItemMasterRepository>(); 
            Services.AddScoped<IUserRoleRepository, UserRoleRepository>(); 
            // ... Add remaining groups like Employees, Scheduling, QC, Invoicing, Notifications, etc.

            return Services;
        }
    }

}
